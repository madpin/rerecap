import { Switch } from "@headlessui/react"
import { useStorage } from "@plasmohq/storage/hook"
import {
  ChatGPTWebAppProviderConfig,
  getProviderConfigKey,
  ProviderType
} from "~config"
import { classNames } from "~utils"
import ModelSelect from "./model-select"

export default function ChatGPTWebAppProvider() {
  const [config, setConfig] = useStorage<ChatGPTWebAppProviderConfig>(
    getProviderConfigKey(ProviderType.ChatGPTWebApp)
  )

  return (
    <>
      {config !== undefined ? (
        <div className="flex flex-col gap-0.5">
          <div className="pb-4">
            <div>Require login to ChatGPT webApp.</div>
          </div>
          <Switch.Group as="div" className="flex items-center">
            <Switch
              checked={config.cleanup}
              onChange={(checked) => {
                setConfig({ ...config, cleanup: checked })
              }}
              className={classNames(
                config.cleanup
                  ? "bg-indigo-600"
                  : "bg-neutral-200 dark:bg-neutral-400",
                "relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
              )}>
              <span
                aria-hidden="true"
                className={classNames(
                  config.cleanup ? "translate-x-5" : "translate-x-0",
                  "pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out"
                )}
              />
            </Switch>
            <Switch.Label as="span" className="ml-3">
              <span className="cursor-pointer text-sm">
                Auto delete conversations generated by Recap
              </span>
            </Switch.Label>
          </Switch.Group>
          <div>
            <label htmlFor="model" className="block text-lg font-medium">
              Model
            </label>
          </div>
          <div id="model">
            <ModelSelect providerType={ProviderType.ChatGPTWebApp} />
          </div>
        </div>
      ) : null}
    </>
  )
}
